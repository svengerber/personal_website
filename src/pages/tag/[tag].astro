---
import { readAll } from "../../lib/markdoc/read";
import { blog } from "../../lib/markdoc/frontmatter.schema";
import PageLayout from "../../layouts/PageLayout.astro";
import PageMeta from "../../components/PageMeta.astro";
import BlogPostPreview from "../../components/BlogPostPreview.astro";
import TagBox from "../../components/TagBox.astro";


export async function getStaticPaths() {

    const posts = await readAll({
    directory: "blog",
    frontmatterSchema: blog,
    });

    const uniqueTags = [...new Set(posts
      .filter((p) => p.frontmatter.draft !== true)
      .map((post) => post.frontmatter.tags)
      .flat())
    ];

    return uniqueTags.map((tag) => {
        const taggedPosts = posts.filter((post) => post.frontmatter.tags.includes(tag));
        return {
            params: { tag },
            props: { posts: taggedPosts },
        };
     });
}

const { tag } = Astro.params;
const { posts } = Astro.props;

const sortedPosts = posts
  .filter((p) => p.frontmatter.draft !== true)
  .sort(
    (a, b) =>
      new Date(b.frontmatter.date).valueOf() -
      new Date(a.frontmatter.date).valueOf()
  );

---

<PageLayout>
  <PageMeta title={`Tags | ${tag}`} slot="meta" />
  <section slot="main">
    <div class="flex flex-wrap gap-3 items-center pb-4">
      <div>
        <p class="text-2xl ">Posts with tag</p>
      </div>
      <div> 
        <TagBox name={tag}/>
      </div>
    </div>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-6 py-8">
        {
          sortedPosts.map((post) => 
            <BlogPostPreview post={post}/>
        )}
    </div>
  </section>
</PageLayout>
